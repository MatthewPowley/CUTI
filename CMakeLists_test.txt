cmake_minimum_required (VERSION 3.2)

if(WIN32)
#to be defined before find package CUTI to enable visual studio integration
	set(CUTI_USES_MSVC_UNIT_BACKEND ON)
endif(WIN32)
find_package(CUTI REQUIRED)

if(WIN32)
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /MP")
	set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /W4")
endif(WIN32)

set(TEST_TOP_DIR ./test/testDynamicLib/)
set(TEST_SRC_DIR ${TEST_TOP_DIR}src/)
set(TEST_INCLUDE_DIR ${TEST_TOP_DIR}include/)
set(TEST_DIR ${TEST_TOP_DIR}test/)

project (compute_lib)
include_directories(${TEST_INCLUDE_DIR})
set(COMPUTE_LIB_SRC ${TEST_SRC_DIR}ComputeInt.cpp ${TEST_SRC_DIR}ComputeDouble.cpp ${TEST_SRC_DIR}ComputeFloat.cpp)
add_definitions(-DCOMPUTE_EXPORT)
set(COMPUTE_LIB_INCLUDE ${TEST_INCLUDE_DIR}ComputeInt.h ${TEST_INCLUDE_DIR}ComputeDouble.h ${TEST_INCLUDE_DIR}ComputeFloat.h ${TEST_INCLUDE_DIR}DynamicLib.h)
add_library(compute_lib SHARED ${COMPUTE_LIB_SRC} ${COMPUTE_LIB_INCLUDE})

project(test_compute_lib)
set(TEST_LIB_SRC ${TEST_DIR}TestLibInt.cpp ${TEST_DIR}TestLibFloat.cpp ${TEST_DIR}TestLibDouble.cpp ${TEST_DIR}TestLibPlugIn.cpp)
set(MACOSX_BUNDLE_GUI_IDENTIFIER "cuti.bundle.identifier")
include_directories(${TEST_INCLUDE_DIR})
cuti_creates_test_target(test_compute_lib compute_lib ${TEST_LIB_SRC})
